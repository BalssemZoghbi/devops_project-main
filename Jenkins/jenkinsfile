pipeline {
    agent any
    tools {
        jdk "JAVA_HOME"
        maven "M2_HOME"
    }
    environment {
        DOCKER_IMAGE_NAME = 'balssem146/dokerep'
        DOCKER_HUB_USERNAME = 'balssem146'
        DOCKER_HUB_PASSWORD = 'dckr_pat_J01vsDIkeVfBT8k8fNltQr_JN8g'
        NEXUS_SNAPSHOT_URL = 'http://localhost:8081/repository/maven-snapshots/'
        NEXUS_RELEASE_URL = 'http://localhost:8081/repository/maven-releases/'
        GROUP_ID = 'tn.esprit'
        ARTIFACT_ID = 'DevOps_Project'
    }
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/ghassen-oueslati/devops_project'
            }
        }
        stage('Echo POM Version') {
            steps {
                dir('DevOps_Project'){
                script {
                    //variable yjib fel version mta3 pom.xml
                    env.POM_VERSION = sh(script: "mvn help:evaluate -Dexpression=project.version -q -DforceStdout", returnStdout: true)
                    echo "POM Version: ${env.POM_VERSION}"
                }
            }

            }
        }
        stage('Code Compile') {
            //ychef l code ycompili w ygeneri les fichiers .class
            steps {
                dir('DevOps_Project') {
                    sh 'mvn clean compile'
                }
            }
        }
        stage('Unit Test') {
            //yexecuti les test unitaires
            steps {
                dir('DevOps_Project') {
                    sh "mvn test"
                }
            }
        }
        stage('SonarQube Analysis') {
            //yexecuti l'analyse statique mta3 l code
            steps {
                dir('DevOps_Project') {
                    script {
                        withSonarQubeEnv() {
                            sh "mvn clean verify sonar:sonar -Dsonar.projectKey=sonar -Dsonar.projectName='sonar'"
                        }
                    }
                }
            }
        }
        // nasn3ou jar mta3 l code w n7otou fel nexus
        stage('Deploy to Maven Repository') {
            steps {
                dir('DevOps_Project') {
                    script {
                        echo "POM Version: ${env.POM_VERSION}"
                        if (POM_VERSION.endsWith('-SNAPSHOT')) {
                            sh '''
                                mvn clean deploy -DskipTests -P nexus-deploy-snapshots -s settings.xml
                            '''
                        } else {
                            sh '''
                                mvn clean deploy -DskipTests -P nexus-deploy-releases -s settings.xml
                            ''' 
                        }
                    }
                }
            }
        }
        //n7otou l image docker fel docker hub
        stage('Build and Push Image') {
            steps {
                script {
                    dir('DevOps_Project') {
                         sh '''
                        docker build -t ${DOCKER_IMAGE_NAME} .
                        docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}
                        docker push ${DOCKER_IMAGE_NAME}
                    '''
                    }
                }
            }
        }



    }
}
